{"version":3,"sources":["images/Boku_no_Hero_Academia_Logo.png","components/Header.js","components/About.js","components/playComponents/ScoreBoard.js","components/playComponents/Card.js","components/Play.js","components/Footer.js","App.js","index.js"],"names":["Header","switchPlaySection","switchAboutSection","className","src","bokuNoHeroLogo","alt","onClick","href","target","xmlns","width","height","viewBox","d","About","ScoreBoard","score","bestScore","Card","charId","charImage","charAlias","charName","getCardId","id","ev","style","backgroundImage","Play","useState","currentHeroes","setCurrentHeroes","heroesSequence","setHeroesSequence","setScore","setBestScore","randomInteger","max","min","Math","floor","random","checkHeroesSequence","parentNode","includes","useEffect","a","currentCharctersArr","currentHeroesIds","i","randomPage","randomCharacter","fetch","response","json","formattedResponse","currentCharacter","result","push","length","map","item","index","images","alias","name","Footer","Date","getFullYear","App","displayPlay","setDisplayPlay","displayAbout","setDisplayAbout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.886a3da5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Boku_no_Hero_Academia_Logo.1292fcc2.png\";","import './Header.css';\nimport bokuNoHeroLogo from '../images/Boku_no_Hero_Academia_Logo.png';\n\nconst Header = ({switchPlaySection, switchAboutSection}) => {\n    return (\n        <div className=\"Header\">\n            <div className=\"logo-container\">\n                <img src={bokuNoHeroLogo} alt=\"bokunohero-logo\" />\n            </div>\n            <div className=\"header__items__container\">\n                <span onClick={switchPlaySection}>Play</span>\n                <span onClick={switchAboutSection}>About</span>\n                <a href=\"https://github.com/FraCav99/memory-game\" target=\"blank\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"/></svg>\n                </a>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;","import './About.css';\n\nconst About = () => {\n    return (\n        <div className=\"About\">\n            <div className=\"infobox\">\n                <div className=\"how-to\">\n                    <h2>How to Play</h2>\n                    <p>\n                        This application puts your memory to the test. You are presented with multiple artifact cards.\n                        The cards get shuffled every time they are clicked.\n                        You CAN NOT click on any card more than once or else your score resets to zero.\n                        The main objective is to get the highest possible score.\n                    </p>\n                </div>\n                <div className=\"copyright\">\n                    <h2>Copyright</h2>\n                    <p>\n                        Data are taken from MHA API by \n                        <span>\n                            <a \n                                href=\"https://github.com/renant/myheroacademiaapi\"\n                                className=\"author\"\n                            >\n                                Renant\n                            </a>\n                        </span>\n                    </p>\n                    <p>\n                        <a className=\"link-to-api\" href=\"https://myheroacademiaapi.com/\" target=\"blank\">Link to API</a>\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;","import './ScoreBoard.css';\n\nconst ScoreBoard = ({score, bestScore}) => {\n    return (\n        <div className=\"ScoreBoard\">\n            <p>Score: {score}</p>\n            <p>Best score: {bestScore}</p>\n        </div>\n    );\n};\n\nexport default ScoreBoard;","import './Card.css';\n\nconst Card = ({charId, charImage, charAlias, charName, getCardId}) => {\n    return (\n        <div className=\"Card\" id={charId} onClick={ev => getCardId(ev)}>\n            <div \n                className=\"pic-container\"\n                style={{backgroundImage: `url(${charImage})`}}\n            ></div>\n            <div className=\"description-container\">\n                <p className=\"hero-name\">{charName || charId}</p>\n                <p className=\"hero-alias\">{charAlias}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import {useState, useEffect} from 'react';\nimport ScoreBoard from './playComponents/ScoreBoard';\nimport Card from './playComponents/Card';\nimport './Play.css';\nimport bokuNoHeroLogo from '../images/Boku_no_Hero_Academia_Logo.png';\n\nconst Play = () => {\n    const [currentHeroes, setCurrentHeroes] = useState([]);\n    const [heroesSequence, setHeroesSequence] = useState([]);\n    const [score, setScore] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n\n    const randomInteger = (max, min) => {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    const checkHeroesSequence = (ev) => {\n        const id = ev.target.parentNode.id;\n        if (!heroesSequence.includes(id)) {\n            setHeroesSequence([...heroesSequence, id]);\n            setScore(score + 1);\n            bestScore <= score && setBestScore(bestScore + 1); \n        } else {\n            setHeroesSequence([]);\n            setScore(0);\n        }\n    }\n\n    useEffect(() => {\n        (async () => {\n            const currentCharctersArr = [];\n            const currentHeroesIds = [];\n            let i = 0;\n            while (i < 3) {\n                const randomPage = randomInteger(1, 16);\n                const randomCharacter = randomInteger(0, 19);\n                const response = await fetch(`https://myheroacademiaapi.com/api/character?page=${randomPage}`);\n                const formattedResponse = await response.json();\n                const currentCharacter = formattedResponse.result[randomCharacter];\n\n                // Avoid duplication of the same card in the current cards array\n                if (!currentHeroesIds.includes(currentCharacter.id)) {\n                    currentCharctersArr.push(currentCharacter);\n                    currentHeroesIds.push(currentCharacter.id);\n                    i++;\n                }\n            }\n            // console.log(currentCharctersArr);\n            setCurrentHeroes(currentCharctersArr);\n        })(); \n    }, [heroesSequence]);\n\n    if (currentHeroes.length === 0) {\n        return <div className=\"Play\">\n            <div className=\"loader-container\">\n                <div className=\"image-container\">\n                    <img src={bokuNoHeroLogo} alt=\"bokunohero-logo\" />\n                </div>\n                <h1>Loading...</h1>\n            </div>\n        </div>\n    }\n\n    return (\n        <div className=\"Play\">\n            <div className=\"scoreboard-container\">\n                <ScoreBoard score={score} bestScore={bestScore}/>\n            </div>\n            <div className=\"cards-container\">\n                {currentHeroes.map((item, index) => {\n                    return (\n                        <Card\n                            key={index}\n                            charId={item.id}\n                            charImage={item.images[item.images.length - 1]}\n                            charAlias={item.alias}\n                            charName={item.name}\n                            getCardId={checkHeroesSequence}\n                        />\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default Play;","import './Footer.css';\n\nconst Footer = () => {\n    return (\n        <div className=\"Footer\">\n            <p>FraCav99 © {new Date().getFullYear()}</p>\n        </div>\n    );\n}\n\nexport default Footer;","import {useState} from 'react';\nimport Header from './components/Header';\nimport About from './components/About';\nimport Play from './components/Play';\nimport Footer from './components/Footer';\nimport './App.css';\n\nconst App = () => {\n  const [displayPlay, setDisplayPlay] = useState(true);\n  const [displayAbout, setDisplayAbout] = useState(false);\n\n  /* Header functions Props */\n  const switchPlaySection = () => {\n    setDisplayPlay(true);\n    setDisplayAbout(false);\n  }\n  \n  const switchAboutSection = () => {\n    setDisplayPlay(false);\n    setDisplayAbout(true);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header \n        switchPlaySection={switchPlaySection}\n        switchAboutSection={switchAboutSection}\n      />\n      {displayPlay && <Play />}\n      {displayAbout && <About />}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}